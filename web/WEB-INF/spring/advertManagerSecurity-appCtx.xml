<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Sample namespace-based configuration
  -
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <debug />

    <global-method-security pre-post-annotations="enabled" />

    
    <http use-expressions="true">
        <!--<intercept-url pattern="/**/*.do/**" access="permitAll" />-->
        <intercept-url pattern="/css/**" access="permitAll"/>
        <intercept-url pattern="/loggedout.jsp" access="permitAll"/>
        <intercept-url pattern="/mvc/affiliates/new/**" access="permitAll" />
        <intercept-url pattern="/mvc/affiliates/add/**" access="permitAll" />
        <intercept-url pattern="/mvc/**" access="isAuthenticated()" />
        <!--
             Allow all other requests. In a real application you should
             adopt a whitelisting approach where access is not allowed by default
          -->
        <form-login login-page='/index.jsp' default-target-url='/mvc/home'  always-use-default-target='true'/>
        <!--<form-login login-page='/index.jsp' default-target-url='/home.htm'  always-use-default-target='true' />-->
        
        <logout invalidate-session="true" logout-success-url="/loggedout.jsp" delete-cookies="JSESSIONID"/>
        <remember-me />
<!--
    Uncomment to enable X509 client authentication support
        <x509 />
-->
        <!-- Uncomment to limit the number of sessions a user can have -->
        <session-management invalid-session-url="/timeout.jsp">
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </session-management>
    </http>


    <beans:bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>


    <authentication-manager>
        <authentication-provider user-service-ref='myUserDetailsService'/>
    </authentication-manager>

    <beans:bean id="myUserDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="advertManagerC3P0DataSource"/>
        <beans:property name="usersByUsernameQuery" value="select affiliateName , password,enabled from affiliate where affiliateName=?"/>
        <beans:property name="authoritiesByUsernameQuery" value="select affiliateName ,authority from authorities  join affiliate on authorities.user_id=affiliate.id where affiliateName = ?"/>
    </beans:bean>

    <beans:bean id="roleHierarchy"    class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
        <beans:property name="hierarchy">
            <beans:value>ROLE_ADMIN > ROLE_STAFF  > ROLE_USER  > ROLE_GUEST</beans:value>
        </beans:property>
    </beans:bean>
    
</beans:beans>
